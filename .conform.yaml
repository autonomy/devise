metadata:
  repository: autonomy/devise

policies:
  - type: conventionalCommit
    spec:
      types:
        - "chore"
        - "docs"
        - "perf"
        - "refactor"
        - "style"
        - "test"
      scopes:
        - "ci"
        - "discoverer"
        - "modifier"
        - "storage"
        - "readme"
        - "renderer"
        - "*"

script:
  template: |
    {{ fromURL "https://raw.githubusercontent.com/autonomy/conform-templates/master/docker/deploy.sh" }}

pipeline:
  stages:
    - api
    - docs
    - test
    - build

stages:
  api:
    artifacts:
    - source: /go/src/github.com/autonomy/devise/api
      destination: ./
    tasks:
      - api
  test:
    artifacts:
      - source: /go/src/github.com/autonomy/devise/coverage.txt
        destination: coverage.txt
    tasks:
      - test
  docs:
    artifacts:
      - source: /go/src/github.com/autonomy/devise/docs
        destination: ./
    tasks:
      - docs
  build:
    tasks:
      - binary
      - image

tasks:
  api:
    template: |
      FROM golang:1.8.3 as api
      WORKDIR /go/src/github.com/autonomy/devise
      RUN apt-get update
      RUN apt-get -y install bsdtar
      RUN go get github.com/golang/protobuf/protoc-gen-go
      RUN curl -L -o /bin/protoc-gen-grpc-java http://search.maven.org/remotecontent?filepath=io/grpc/protoc-gen-grpc-java/1.3.0/protoc-gen-grpc-java-1.3.0-linux-x86_64.exe \
          && chmod +x /bin/protoc-gen-grpc-java
      RUN curl -L https://github.com/google/protobuf/releases/download/v3.3.0/protoc-3.3.0-linux-x86_64.zip | bsdtar -xf - --strip-components=1 -C /bin bin/protoc \
          && chmod +x /bin/protoc
      COPY ./proto ./proto
      RUN mkdir api
      RUN protoc -I proto proto/api.proto \
            --go_out=plugins=grpc:api \
            --plugin=protoc-gen-grpc-java=/bin/protoc-gen-grpc-java --grpc-java_out=api
  test:
    template: |
      {{ fromURL "https://raw.githubusercontent.com/autonomy/conform-templates/master/golang/Dockerfile.test" }}
  binary:
    template: |
      FROM golang:1.8.3 as binary
      WORKDIR /go/src/github.com/autonomy/devise
      COPY ./ ./
      {{ if and .Git.IsClean .Git.IsTag }}
      RUN GOOS=linux GOARCH=amd64 CGO_ENABLED=0 go build -o /devise -a -ldflags "-X \"github.com/{{ .Repository }}/pkg.Tag={{ trimAll "v" .Git.Tag }}\" -X \"github.com/{{ .Repository }}/pkg.SHA={{ .Git.SHA }}\" -X \"github.com/{{ .Repository }}/pkg.Built={{ .Built }}\""
      {{ else if .Git.IsClean }}
      RUN GOOS=linux GOARCH=amd64 CGO_ENABLED=0 go build -o /devise -a -ldflags "-X \"github.com/{{ .Repository }}/pkg.SHA={{ .Git.SHA }}\" -X \"github.com/{{ .Repository }}/pkg.Built={{ .Built }}\""
      {{ else }}
      RUN GOOS=linux GOARCH=amd64 CGO_ENABLED=0 go build -o /devise
      {{ end }}
  docs:
    template: |
      FROM golang:1.8.3 as docs
      WORKDIR /go/src/github.com/autonomy/devise
      RUN go get -u github.com/gohugoio/hugo
      COPY ./website ./website
      RUN cd ./website && hugo --verbose
      RUN echo "devise.autonomy.io" > ./docs/CNAME
  image:
    template: |
      FROM alpine:3.6 as image
      MAINTAINER Andrew Rynhard <andrew.rynhard@autonomy.io>
      RUN apk --update add bash \
          && rm -rf /var/cache/apk/*
      WORKDIR /app
      COPY --from=binary /devise .
      COPY assets assets
      ENTRYPOINT ["./devise"]
